{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Options.jsx","components/Notifications.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","myVideoRef","useRef","userVideoRef","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivingCall","Provider","value","callUser","console","log","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","classes","useContext","Grid","container","className","Paper","item","xs","md","Typography","variant","playsInline","muted","ref","autoPlay","root","display","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","gutterBottom","TextField","label","onChange","e","target","fullWidth","text","Button","color","startIcon","Assignment","fontSize","PhoneDisabled","onClick","Phone","Notifications","style","appBar","borderRadius","alignItems","wrapper","App","AppBar","position","align","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5dc6e358.chunk.js","sourcesContent":["import React, {createContext, useState, useRef, useEffect} from 'react';\nimport {io} from 'socket.io-client';\nimport Peer from 'simple-peer';\n\nconst SocketContext = createContext();\n\nconst socket = io('https://ti-sai-video-chat.herokuapp.com/');\n// const socket = io('http://localhost:5000');\n\nconst ContextProvider = ({ children }) => {\n    const [callAccepted, setCallAccepted] = useState(false);\n    const [callEnded, setCallEnded] = useState(false);\n    const [stream, setStream] = useState();\n    const [name, setName] = useState('');\n    const [call, setCall] = useState({});\n    const [me, setMe] = useState('');\n\n    const myVideoRef = useRef();\n    const userVideoRef = useRef();\n    const connectionRef = useRef();\n\n    useEffect(() => {\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n            .then((currentStream) => {\n                setStream(currentStream);\n\n                myVideoRef.current.srcObject = currentStream;\n            });\n\n        socket.on('me', (id) => setMe(id));\n\n        socket.on('callUser', ({ from, name: callerName, signal }) => {\n            setCall({ isReceivingCall: true, from, name: callerName, signal });\n        });\n    }, []);\n\n    const answerCall = () => {\n        setCallAccepted(true);\n\n        const peer = new Peer({ initiator: false, trickle: false, stream });\n\n        peer.on('signal', (data) => {\n            socket.emit('answerCall', { signal: data, to: call.from });\n        });\n\n        peer.on('stream', (currentStream) => {\n            userVideoRef.current.srcObject = currentStream;\n        });\n\n        peer.signal(call.signal);\n\n        connectionRef.current = peer;\n    };\n\n    const callUser = (id) => {\n        console.log(id)\n        const peer = new Peer({ initiator: true, trickle: false, stream });\n\n        peer.on('signal', (data) => {\n            socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\n        });\n\n        peer.on('stream', (currentStream) => {\n            userVideoRef.current.srcObject = currentStream;\n        });\n\n        socket.on('callAccepted', (signal) => {\n            setCallAccepted(true);\n\n            peer.signal(signal);\n        });\n\n        connectionRef.current = peer;\n    };\n\n    const leaveCall = () => {\n        setCallEnded(true);\n\n        connectionRef.current.destroy();\n\n        window.location.reload();\n    };\n\n    return (\n        <SocketContext.Provider value={{\n            call,\n            callAccepted,\n            myVideoRef,\n            userVideoRef,\n            stream,\n            name,\n            setName,\n            callEnded,\n            me,\n            callUser,\n            leaveCall,\n            answerCall,\n        }}\n        >\n            {children}\n        </SocketContext.Provider>\n    );\n}\n\nexport { ContextProvider, SocketContext }","import React, {useContext} from 'react';\nimport {Grid, Typography, Paper} from \"@material-ui/core\";\n\nimport {makeStyles} from \"@material-ui/core\";\n\nimport {SocketContext} from \"../SocketContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    video: {\n        width: '550px',\n        [theme.breakpoints.down('xs')]: {\n            width: '300px',\n        },\n    },\n    gridContainer: {\n        justifyContent: 'center',\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column',\n        },\n    },\n    paper: {\n        padding: '10px',\n        border: '2px solid black',\n        margin: '10px',\n    },\n}));\n\nconst VideoPlayer = () => {\n    const classes = useStyles();\n    const {name, callAccepted, myVideoRef, userVideoRef, callEnded, stream, call} = useContext(SocketContext)\n\n\n\n    return (\n        <Grid container className={classes.gridContainer}>\n            {/* My video */}\n            {\n                stream && (\n                    <Paper className={classes.paper}>\n                        <Grid item xs={12} md={6}>\n                            <Typography variant=\"h5\">{name || \"Name\"}</Typography>\n                            <video playsInline muted ref={myVideoRef} autoPlay className={classes.video}/>\n                        </Grid>\n                    </Paper>\n                )}\n\n            {/* User video */}\n            {\n                callAccepted && !callEnded && (\n                    <Paper className={classes.paper}>\n                        <Grid item xs={12} md={6}>\n                            <Typography variant=\"h5\">{call.name || \"Name\"}</Typography>\n                            <video playsInline ref={userVideoRef} autoPlay className={classes.video}/>\n                        </Grid>\n                    </Paper>\n                )}\n        </Grid>\n    );\n};\n\nexport default VideoPlayer;","import React, {useContext, useState} from 'react';\nimport {Button, TextField, Grid, Typography, Container, Paper} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\n\nimport {SocketContext} from \"../SocketContext\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    gridContainer: {\n        width: '100%',\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column',\n        },\n    },\n    container: {\n        width: '600px',\n        margin: '35px 0',\n        padding: 0,\n        [theme.breakpoints.down('xs')]: {\n            width: '80%',\n        },\n    },\n    margin: {\n        marginTop: 20,\n    },\n    padding: {\n        padding: 20,\n    },\n    paper: {\n        padding: '10px 20px',\n        border: '2px solid black',\n    },\n}));\n\nconst Options = ({ children }) => {\n    const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\n    const [idToCall, setIdToCall] = useState('');\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.container}>\n            <Paper elevation={10} className={classes.paper}>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <Grid container className={classes.gridContainer}>\n                        <Grid item xs={12} md={6} className={classes.padding}>\n                            <Typography gutterBottom variant=\"h6\">Account Info</Typography>\n                            <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\n                            <CopyToClipboard text={me} className={classes.margin}>\n                                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\n                                    Copy Your ID\n                                </Button>\n                            </CopyToClipboard>\n                        </Grid>\n                        <Grid item xs={12} md={6} className={classes.padding}>\n                            <Typography gutterBottom variant=\"h6\">Make a call</Typography>\n                            <TextField label=\"ID to call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\n                            {callAccepted && !callEnded ? (\n                                <Button variant=\"contained\" color=\"secondary\" startIcon={<PhoneDisabled fontSize=\"large\" />} fullWidth onClick={leaveCall} className={classes.margin}>\n                                    Hang Up\n                                </Button>\n                            ) : (\n                                <Button variant=\"contained\" color=\"primary\" startIcon={<Phone fontSize=\"large\" />} fullWidth onClick={() => callUser(idToCall)} className={classes.margin}>\n                                    Call\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </form>\n                {children}\n            </Paper>\n        </Container>\n    );\n};\n\nexport default Options;","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport { SocketContext } from '../SocketContext';\n\nconst Notifications = () => {\n    const { answerCall, call, callAccepted } = useContext(SocketContext);\n\n    return (\n        <>\n            {call.isReceivingCall && !callAccepted && (\n                <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n                    <h1>{call.name} is calling:</h1>\n                    <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\n                        Answer\n                    </Button>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Notifications;","import React from 'react';\nimport {Typography, AppBar} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\n\n\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport Options from \"./components/Options\";\nimport Notifications from \"./components/Notifications\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        borderRadius: 15,\n        margin: '30px 100px',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '600px',\n        border: '2px solid black',\n\n        [theme.breakpoints.down('xs')]: {\n            width: '90%',\n        },\n    },\n    wrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%',\n    },\n}));\n\nconst App = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.wrapper}>\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n                <Typography variant=\"h2\" align=\"center\">Video Chat</Typography>\n            </AppBar>\n            <VideoPlayer/>\n            <Options>\n                <Notifications/>\n            </Options>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport {ContextProvider} from './SocketContext';\nimport './styles.css';\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}